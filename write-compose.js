const fs = require("fs");

const langs = [
  "en",
  "hi",
  "es",
  "ar",
  "ja",
  "uk",
  "fr",
  "or",
  "te",
  "gu",
  "bn",
  "pa",
  "sat",
  "sv",
  "it",
  "kn",
  "ml",
  "ta",
  "eu",
  "ha",
  "zh",
  "ne",
];
const ports = [
  4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012,
  4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021
];

// Write nginx config
const nginxConfig = `
server {
  listen 80;
  listen [::]:80;
  client_max_body_size 200M;

  # SSL configuration
  #
  # listen 443 ssl default_server;
  # listen [::]:443 ssl default_server;
  #
  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html;

  #server_name  www.videowiki.org;
  server_name videowiki.wmcloud.org www.videowiki.wmcloud.org;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://localhost:4000;
  }

  location /en/ {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    rewrite ^/en/(.*) /$1 break;
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://localhost:4000;
  }

  ${langs
    .map(
      (lang, index) => `
  location /${lang}/ {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    rewrite ^/${lang}/(.*) /$1 break;
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://localhost:${ports[index]};
  }
  `
    )
    .join("\n")}
}

`;

fs.writeFileSync("nginx/default.conf", nginxConfig);

// Write compose file
const composeFile = `
version: "3"
services:
  redis-server:
    image: 'redis'
    restart: unless-stopped
    
${langs
    .map((lang, index) =>
      `
  web_${lang}:
    image: videowiki/app:latest
    restart: unless-stopped
    ports:
      - "${ports[index]}:${ports[index]}"
    depends_on:
      - redis-server
      ${index == 0 ? '' : `- web_${langs[index - 1]}`} 
    command: ["node", "server/index.js", "${ports[index]}", "${lang}"]

`
    )
    .join("")}
`;

fs.writeFileSync("docker-compose.yml", composeFile);
